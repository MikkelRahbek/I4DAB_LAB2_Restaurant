// <auto-generated />
using I4DAB_LAB2;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace I4DAB_LAB2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20191106224238_FinishedAllModelsAndRelations")]
    partial class FinishedAllModelsAndRelations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("I4DAB_LAB2.Models.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("ReviewId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReviewId");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("I4DAB_LAB2.Models.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("PersonName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ReviewId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonName")
                        .IsUnique()
                        .HasFilter("[PersonName] IS NOT NULL");

                    b.HasIndex("ReviewId");

                    b.HasIndex("TableId");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("I4DAB_LAB2.Models.GuestDish", b =>
                {
                    b.Property<int>("DishId")
                        .HasColumnType("int");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.HasKey("DishId", "GuestId");

                    b.HasIndex("GuestId");

                    b.ToTable("GuestDishes");
                });

            modelBuilder.Entity("I4DAB_LAB2.Models.Restaurant", b =>
                {
                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Address");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("I4DAB_LAB2.Models.RestaurantDish", b =>
                {
                    b.Property<string>("RestaurantId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DishId")
                        .HasColumnType("int");

                    b.HasKey("RestaurantId", "DishId");

                    b.HasIndex("DishId");

                    b.ToTable("RestaurantDishes");
                });

            modelBuilder.Entity("I4DAB_LAB2.Models.Review", b =>
                {
                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RestaurantId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.HasKey("Text");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("I4DAB_LAB2.Models.Table", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RestaurantId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Number");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("I4DAB_LAB2.Models.WaiterTable", b =>
                {
                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.Property<int>("WaiterId")
                        .HasColumnType("int");

                    b.HasKey("TableId", "WaiterId");

                    b.HasIndex("WaiterId");

                    b.ToTable("WaiterTables");
                });

            modelBuilder.Entity("I4DAB_LAB2.Person", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("People");
                });

            modelBuilder.Entity("I4DAB_LAB2.Waiter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("PersonName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Salery")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonName")
                        .IsUnique()
                        .HasFilter("[PersonName] IS NOT NULL");

                    b.ToTable("Waiters");
                });

            modelBuilder.Entity("I4DAB_LAB2.Models.Dish", b =>
                {
                    b.HasOne("I4DAB_LAB2.Models.Review", "Review")
                        .WithMany("Dishes")
                        .HasForeignKey("ReviewId");
                });

            modelBuilder.Entity("I4DAB_LAB2.Models.Guest", b =>
                {
                    b.HasOne("I4DAB_LAB2.Person", "Person")
                        .WithOne("Guest")
                        .HasForeignKey("I4DAB_LAB2.Models.Guest", "PersonName");

                    b.HasOne("I4DAB_LAB2.Models.Review", "Review")
                        .WithMany("Guests")
                        .HasForeignKey("ReviewId");

                    b.HasOne("I4DAB_LAB2.Models.Table", "Table")
                        .WithMany("Guests")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("I4DAB_LAB2.Models.GuestDish", b =>
                {
                    b.HasOne("I4DAB_LAB2.Models.Dish", "Dish")
                        .WithMany("GuestDishes")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("I4DAB_LAB2.Models.Guest", "Guest")
                        .WithMany("GuestDishes")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("I4DAB_LAB2.Models.RestaurantDish", b =>
                {
                    b.HasOne("I4DAB_LAB2.Models.Dish", "Dish")
                        .WithMany("RestaurantDishes")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("I4DAB_LAB2.Models.Restaurant", "Restaurant")
                        .WithMany("RestaurantDishes")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("I4DAB_LAB2.Models.Review", b =>
                {
                    b.HasOne("I4DAB_LAB2.Models.Restaurant", "Restaurant")
                        .WithMany("Reviews")
                        .HasForeignKey("RestaurantId");
                });

            modelBuilder.Entity("I4DAB_LAB2.Models.Table", b =>
                {
                    b.HasOne("I4DAB_LAB2.Models.Restaurant", "Restaurant")
                        .WithMany("Tables")
                        .HasForeignKey("RestaurantId");
                });

            modelBuilder.Entity("I4DAB_LAB2.Models.WaiterTable", b =>
                {
                    b.HasOne("I4DAB_LAB2.Models.Table", "Table")
                        .WithMany("WaiterTables")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("I4DAB_LAB2.Waiter", "Waiter")
                        .WithMany("WaiterTables")
                        .HasForeignKey("WaiterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("I4DAB_LAB2.Waiter", b =>
                {
                    b.HasOne("I4DAB_LAB2.Person", "Person")
                        .WithOne("Waiter")
                        .HasForeignKey("I4DAB_LAB2.Waiter", "PersonName");
                });
#pragma warning restore 612, 618
        }
    }
}
